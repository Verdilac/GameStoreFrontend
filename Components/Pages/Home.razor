@page "/"
@inject GamesClient Client;
@attribute [StreamRendering] 

@* Making Use of Stream Rendering so the user is able to view the page untill the api gets back with data*@

<PageTitle>Game Catalog</PageTitle>

<div class="container mt-3">
    <a class="btn btn-primary" role="button" href="/editgame">New Game</a>
</div>
@if (_games is null)
{
    <p><em>Loading....</em></p>
}
else
{
    <div class="container">
        <table class="table table-stripped table-bordered table-hover mt-3 ">
            <thead class="table-dark">
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th class="text-end">Price</th>
            <th>ReleaseDate</th>
            <th></th>
            </thead>
            <tbody>
            @foreach (var game in _games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td class="text-end ">@game.Price.ToString("C2")</td>
                    <td>@game.ReleaseDate</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@GetGameUrl(game.Id)">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)">
                                <i class="bi bi-trash-fill"></i>
                            </button>
                            
                        </div>
                        <DeleteGame Game="@game"></DeleteGame>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
@code {

  
    private GameSummary[]? _games;

    protected override async Task  OnInitializedAsync()
    {
        _games = await Client.GetGamesAsync();
    }

    private static string GetGameUrl(int id) => $"/editgame/{id}";

    private string GetDeleteModalId(GameSummary game) {
        return $"#{DeleteGame.GetModalId(game)}";
    }
}
